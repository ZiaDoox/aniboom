{"ast":null,"code":"var _jsxFileName = \"/Users/ostore/aniboom/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport $ from 'jquery';\nconst navbar1 = document.querySelector('#nav1');\nconst navbar2 = document.querySelector('#nav2');\nconst navbars = document.querySelector('nav');\n\nwindow.onscroll = function () {\n  if (navbar1) {\n    renderIndexHTMLNav();\n  } else {\n    renderStickyNavbar(navbar2);\n  }\n};\n\nfunction renderStickyNavbar(navbar2, navbar1) {\n  if (window.pageYOffset >= navbars.offsetTop) {\n    navbar2.classList.add(\"sticky\");\n    navbar1.classList.add(\"sticky\");\n  } else {\n    navbar2.classList.remove(\"sticky\");\n    navbar1.classList.remove(\"sticky\");\n  }\n} /////////////////////////////////////////////////////////////////\n// runs the renderStickyNavBar to make sure either navbars are     // sticky\n\n\nfunction renderIndexHTMLNav() {\n  renderStickyNavBar(navbar2, navbar1); // set mainbottom to determine coordinate of #about-page1 (grey div // after navbar) \n\n  var mainbottom = $(\"#aboutpage-1\").offset().top + $(\"#aboutpage-1\").height();\n  $(window).on('scroll', function () {\n    // we round here to reduce a little workload\n    var stop = Math.round($(window).scrollTop());\n\n    if (stop > mainbottom) {\n      navbar1.classList.add(\"hidden\");\n      navbar2.classList.remove(\"hidden\");\n    } else {\n      navbar2.classList.add(\"hidden\");\n      navbar1.classList.remove(\"hidden\");\n    }\n  });\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ostore/aniboom/frontend/src/index.js"],"names":["React","ReactDOM","Provider","store","App","serviceWorker","$","navbar1","document","querySelector","navbar2","navbars","window","onscroll","renderIndexHTMLNav","renderStickyNavbar","pageYOffset","offsetTop","classList","add","remove","renderStickyNavBar","mainbottom","offset","top","height","on","stop","Math","round","scrollTop","render","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,qBAAP;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AAGA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACA,MAAMC,OAAO,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACA,MAAME,OAAO,GAAGH,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAhB;;AAGAG,MAAM,CAACC,QAAP,GAAkB,YAAY;AAC5B,MAAGN,OAAH,EAAY;AACVO,IAAAA,kBAAkB;AACnB,GAFD,MAEM;AACJC,IAAAA,kBAAkB,CAACL,OAAD,CAAlB;AACD;AACF,CAND;;AAQA,SAASK,kBAAT,CAA4BL,OAA5B,EAAqCH,OAArC,EAA6C;AAC3C,MAAIK,MAAM,CAACI,WAAP,IAAsBL,OAAO,CAACM,SAAlC,EAA6C;AACvCP,IAAAA,OAAO,CAACQ,SAAR,CAAkBC,GAAlB,CAAsB,QAAtB;AACAZ,IAAAA,OAAO,CAACW,SAAR,CAAkBC,GAAlB,CAAsB,QAAtB;AACD,GAHL,MAGW;AACLT,IAAAA,OAAO,CAACQ,SAAR,CAAkBE,MAAlB,CAAyB,QAAzB;AACAb,IAAAA,OAAO,CAACW,SAAR,CAAkBE,MAAlB,CAAyB,QAAzB;AACD;AACN,C,CACD;AACA;;;AACA,SAASN,kBAAT,GAA8B;AAC5BO,EAAAA,kBAAkB,CAACX,OAAD,EAAUH,OAAV,CAAlB,CAD4B,CAE9B;;AACA,MAAIe,UAAU,GAAGhB,CAAC,CAAC,cAAD,CAAD,CAAkBiB,MAAlB,GAA2BC,GAA3B,GAAiClB,CAAC,CAAC,cAAD,CAAD,CAAkBmB,MAAlB,EAAlD;AACAnB,EAAAA,CAAC,CAACM,MAAD,CAAD,CAAUc,EAAV,CAAa,QAAb,EAAuB,YACrB;AAEI;AACA,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWvB,CAAC,CAACM,MAAD,CAAD,CAAUkB,SAAV,EAAX,CAAX;;AAEA,QAAIH,IAAI,GAAGL,UAAX,EAAuB;AACnBf,MAAAA,OAAO,CAACW,SAAR,CAAkBC,GAAlB,CAAsB,QAAtB;AACAT,MAAAA,OAAO,CAACQ,SAAR,CAAkBE,MAAlB,CAAyB,QAAzB;AACH,KAHD,MAGO;AACHV,MAAAA,OAAO,CAACQ,SAAR,CAAkBC,GAAlB,CAAsB,QAAtB;AACAZ,MAAAA,OAAO,CAACW,SAAR,CAAkBE,MAAlB,CAAyB,QAAzB;AACH;AAEJ,GAdH;AAeC;;AAGDnB,QAAQ,CAAC8B,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAE5B,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEK,QAAQ,CAACwB,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACA3B,aAAa,CAAC4B,UAAd","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport $ from 'jquery'\n\n\nconst navbar1 = document.querySelector('#nav1');\nconst navbar2 = document.querySelector('#nav2')\nconst navbars = document.querySelector('nav')\n\n\nwindow.onscroll = function () {\n  if(navbar1) {\n    renderIndexHTMLNav()\n  }else {\n    renderStickyNavbar(navbar2)\n  }\n}\n\nfunction renderStickyNavbar(navbar2, navbar1){\n  if (window.pageYOffset >= navbars.offsetTop) {\n        navbar2.classList.add(\"sticky\");\n        navbar1.classList.add(\"sticky\");\n      } else {\n        navbar2.classList.remove(\"sticky\");\n        navbar1.classList.remove(\"sticky\");\n      }\n}\n/////////////////////////////////////////////////////////////////\n// runs the renderStickyNavBar to make sure either navbars are     // sticky\nfunction renderIndexHTMLNav() {\n  renderStickyNavBar(navbar2, navbar1);\n// set mainbottom to determine coordinate of #about-page1 (grey div // after navbar) \nvar mainbottom = $(\"#aboutpage-1\").offset().top + $(\"#aboutpage-1\").height();\n$(window).on('scroll', function () \n  {\n\n      // we round here to reduce a little workload\n      var stop = Math.round($(window).scrollTop());\n\n      if (stop > mainbottom) {\n          navbar1.classList.add(\"hidden\");\n          navbar2.classList.remove(\"hidden\");\n      } else {\n          navbar2.classList.add(\"hidden\");\n          navbar1.classList.remove(\"hidden\");\n      }\n\n  });\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}